run();

readInput();
parseCommand(); isCommandValid();
computeResult();
printResult();

// Tokenizer class
class Tokenizer {
public:
    std::string getToken(const std::string& input);
};

// FullCommand class
template <typename Operand>
class FullCommand {
public:
    void addArgument(const std::string& key, Operand value);
};

// Parser class
template <typename Operand>
class Parser {
public:
    FullCommand<Operand> parse(const std::string& input);
};

// CommandRegistry class
template <typename Operand>
class CommandRegistry {
public:
    FullCommand<Operand> findCommand(const std::string& commandName);
};

